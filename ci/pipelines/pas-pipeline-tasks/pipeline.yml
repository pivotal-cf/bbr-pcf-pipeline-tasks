---
opsman_credentials: &opsman_credentials
  SKIP_SSL_VALIDATION: ((opsman.skip-ssl-validation))
  OPSMAN_URL: ((opsman.url))
  OPSMAN_USERNAME: ((opsman.username))
  OPSMAN_PASSWORD: ((opsman.password))
  OPSMAN_PRIVATE_KEY: ((opsman.private-key))

s3_credentials: &s3_credentials
  bucket: ((storage.backup-bucket))
  region_name: ((storage.region))
  access_key_id: ((aws_credentials.access_key_id))
  secret_access_key: ((aws_credentials.secret_access_key))
  endpoint: ((storage.endpoint))

groups:
- name: master
  jobs:
  - validate-sample-pipeline
  - export-om-installation
  - bbr-backup-director
  - bbr-backup-pas

- name: pull-requests
  jobs:
  - trigger-pr
  - check-opsman-status-pr
  - validate-sample-pipeline-prs
  - export-om-installation-prs
  - bbr-backup-director-prs
  - bbr-cleanup-director-prs
  - bbr-backup-pas-prs
  - bbr-cleanup-pas-prs

jobs:
- name: validate-sample-pipeline
  plan:
  - in_parallel:
    - get: 6h
      trigger: true
    - get: bbr-pipeline-tasks-repo
      trigger: true
  - task: validate-pipeline
    file: bbr-pipeline-tasks-repo/ci/tasks/validate-pipeline/task.yml
    input_mapping:
      pipeline: bbr-pipeline-tasks-repo
    params:
      PIPELINE_PATH: examples/pas-pipeline.yml
      SECRETS_PATH: examples/pas-secrets.yml
  - task: ensure-ci-includes-sample-pipeline
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfplatformrecovery/backup-and-restore
      inputs:
      - name: bbr-pipeline-tasks-repo
      run:
        path: bash
        args:
        - -euc
        - |
          set -o pipefail

          git config --global --remove-section url."git@github.com:"

          go get -u github.com/sahilm/yamldiff

          yamldiff \
            --file1 bbr-pipeline-tasks-repo/examples/pas-pipeline.yml \
            --file2 bbr-pipeline-tasks-repo/ci/pipelines/pas-pipeline-tasks/pipeline.yml

          exit "$(yamldiff \
            --file1 bbr-pipeline-tasks-repo/examples/pas-pipeline.yml \
            --file2 bbr-pipeline-tasks-repo/ci/pipelines/pas-pipeline-tasks/pipeline.yml \
            | grep '^\-' | grep -v 'OPSMAN_PRIVATE_KEY' | grep -v 'tag_filter' | wc -l)"

- name: export-om-installation
  serial: true
  plan:
  - in_parallel:
    - get: 6h
      trigger: true
    - get: bbr-pipeline-tasks-repo
      trigger: true
  - task: export-om-installation
    file: bbr-pipeline-tasks-repo/tasks/export-om-installation/task.yml
    params:
      OPSMAN_PASSWORD: ((opsman.password))
      OPSMAN_URL: ((opsman.url))
      OPSMAN_USERNAME: ((opsman.username))
      SKIP_SSL_VALIDATION: ((opsman.skip-ssl-validation))
  - put: om-backup-artifact
    params:
      file: om-installation/installation_*.zip

- name: bbr-backup-pas
  serial: true
  serial_groups:
  - backup-pas
  plan:
  - in_parallel:
    - get: 6h
      trigger: true
    - get: bbr-pipeline-tasks-repo
      trigger: true
    - get: bbr-release
      trigger: true
  - task: check-opsman-status
    file: bbr-pipeline-tasks-repo/tasks/check-opsman-status/task.yml
    params:
      <<: *opsman_credentials
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-pas
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-pas/task.yml
    params:
      <<: *opsman_credentials
      OPSMAN_PRIVATE_KEY: ((opsman.private-key))
    on_failure:
      task: bbr-cleanup-pas
      file: bbr-pipeline-tasks-repo/tasks/bbr-cleanup-pas/task.yml
      params:
        <<: *opsman_credentials
        OPSMAN_PRIVATE_KEY: ((opsman.private-key))
  - put: pas-backup-bucket
    params:
      file: pas-backup-artifact/pas-backup_*.tar

- name: bbr-backup-director
  serial: true
  serial_groups:
  - backup-director
  plan:
  - in_parallel:
    - get: 6h
      trigger: true
    - get: bbr-pipeline-tasks-repo
      trigger: true
    - get: bbr-release
      trigger: true
  - task: check-opsman-status
    file: bbr-pipeline-tasks-repo/tasks/check-opsman-status/task.yml
    params:
      <<: *opsman_credentials
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-director
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-director/task.yml
    params:
      <<: *opsman_credentials
    on_failure:
      task: bbr-cleanup-director
      file: bbr-pipeline-tasks-repo/tasks/bbr-cleanup-director/task.yml
      params:
        <<: *opsman_credentials
  - put: director-backup-bucket
    params:
      file: director-backup-artifact/director-backup_*.tar

- name: trigger-pr
  serial: true
  plan:
  - get: bbr-pipeline-tasks-prs

- name: validate-sample-pipeline-prs
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
      trigger: true
      resource: bbr-pipeline-tasks-prs
      passed: [trigger-pr]
  - put: bbr-pipeline-tasks-prs
    params:
      context: validation-of-sample-pas-pipeline
      path: bbr-pipeline-tasks-repo
      status: pending
  - task: validate-pipeline
    file: bbr-pipeline-tasks-repo/ci/tasks/validate-pipeline/task.yml
    input_mapping:
      pipeline: bbr-pipeline-tasks-repo
    params:
      PIPELINE_PATH: examples/pas-pipeline.yml
      SECRETS_PATH: examples/pas-secrets.yml
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: validation-of-sample-pas-pipeline
        path: bbr-pipeline-tasks-repo
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: validation-of-sample-pas-pipeline
        path: bbr-pipeline-tasks-repo
        status: success

- name: export-om-installation-prs
  serial: true
  plan:
  - get: bbr-pipeline-tasks-repo
    trigger: true
    resource: bbr-pipeline-tasks-prs
    passed: [trigger-pr]
  - put: bbr-pipeline-tasks-prs
    params:
      context: export-om-installation
      path: bbr-pipeline-tasks-repo
      status: pending
  - task: export-om-installation
    file: bbr-pipeline-tasks-repo/tasks/export-om-installation/task.yml
    params:
      <<: *opsman_credentials
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: export-om-installation
        path: bbr-pipeline-tasks-repo
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: export-om-installation
        path: bbr-pipeline-tasks-repo
        status: success
  - put: om-backup-artifact
    params:
      file: om-installation/installation_*.zip

- name: bbr-backup-pas-prs
  serial: true
  serial_groups:
  - backup-pas
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
      trigger: true
      resource: bbr-pipeline-tasks-prs
      passed: [trigger-pr]
    - get: bbr-release
  - put: bbr-pipeline-tasks-prs
    params:
      context: bbr-backup-pas
      path: bbr-pipeline-tasks-repo
      status: pending
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-pas
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-pas/task.yml
    params:
      <<: *opsman_credentials
      OPSMAN_PRIVATE_KEY: ((opsman.private-key))
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-backup-pas
        path: bbr-pipeline-tasks-repo
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-backup-pas
        path: bbr-pipeline-tasks-repo
        status: success
  - put: pas-backup-bucket
    params:
      file: pas-backup-artifact/pas-backup_*.tar

- name: bbr-backup-director-prs
  serial: true
  serial_groups:
  - backup-director
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
      trigger: true
      resource: bbr-pipeline-tasks-prs
      passed: [trigger-pr]
    - get: bbr-release
  - put: bbr-pipeline-tasks-prs
    params:
      context: bbr-backup-director
      path: bbr-pipeline-tasks-repo
      status: pending
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-director
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-director/task.yml
    params:
      <<: *opsman_credentials
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-backup-director
        path: bbr-pipeline-tasks-repo
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-backup-director
        path: bbr-pipeline-tasks-repo
        status: success
  - put: director-backup-bucket
    params:
      file: director-backup-artifact/director-backup_*.tar

- name: bbr-cleanup-pas-prs
  serial: true
  serial_groups:
  - backup-pas
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-prs
      trigger: true
      passed: [trigger-pr]
    - get: bbr-release
  - task: extract-binary
    file: bbr-pipeline-tasks-prs/tasks/extract-bbr-binary/task.yml
  - task: bbr-cleanup-pas-prs
    file: bbr-pipeline-tasks-prs/tasks/bbr-cleanup-pas/task.yml
    params:
      <<: *opsman_credentials
      OPSMAN_PRIVATE_KEY: ((opsman.private-key))
    input_mapping:
      bbr-pipeline-tasks-repo: bbr-pipeline-tasks-prs
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-cleanup-pas
        path: bbr-pipeline-tasks-prs
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-cleanup-pas
        path: bbr-pipeline-tasks-prs
        status: success

- name: bbr-cleanup-director-prs
  serial: true
  serial_groups:
  - backup-director
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-prs
      trigger: true
      passed: [trigger-pr]
    - get: bbr-release
  - task: extract-binary
    file: bbr-pipeline-tasks-prs/tasks/extract-bbr-binary/task.yml
  - task: bbr-cleanup-director-prs
    file: bbr-pipeline-tasks-prs/tasks/bbr-cleanup-director/task.yml
    params:
      <<: *opsman_credentials
    input_mapping:
      bbr-pipeline-tasks-repo: bbr-pipeline-tasks-prs
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-cleanup-director
        path: bbr-pipeline-tasks-prs
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: bbr-cleanup-director
        path: bbr-pipeline-tasks-prs
        status: success

- name: check-opsman-status-pr
  serial: true
  plan:
  - get: bbr-pipeline-tasks-repo
    trigger: true
    resource: bbr-pipeline-tasks-prs
    passed:
    - validate-sample-pipeline-prs
    - export-om-installation-prs
    - bbr-backup-director-prs
    - bbr-backup-pas-prs
  - put: bbr-pipeline-tasks-prs
    params:
      context: check-opsman-status
      path: bbr-pipeline-tasks-repo
      status: pending
  - task: check-opsman-status
    file: bbr-pipeline-tasks-prs/tasks/check-opsman-status/task.yml
    params:
      <<: *opsman_credentials
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: check-opsman-status
        path: bbr-pipeline-tasks-repo
        status: failure
  - task: check-opsman-status-during-apply-changes
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfplatformrecovery/bbr-pcf-pipeline-tasks
          tag: final
      inputs:
      - name: bbr-pipeline-tasks-repo
      params:
        <<: *opsman_credentials
      run:
        path: /bin/bash
        args:
        - -c
        - |
          set -eu

          source "bbr-pipeline-tasks-repo/scripts/om-cmd"
          om_cmd apply-changes &
          pid=$!
          sleep 20

          set +e
          output="$(./bbr-pipeline-tasks-repo/tasks/check-opsman-status/task.sh)"
          code=$?
          set -e

          test $code -ne 0
          echo "$output"
          grep "\"Apply Changes\" is in flight." <<< "$output"

          echo "Wait for \"Apply Changes\" to finish."
          wait $pid
    on_failure:
      put: bbr-pipeline-tasks-prs
      params:
        context: check-opsman-status
        path: bbr-pipeline-tasks-repo
        status: failure
    on_success:
      put: bbr-pipeline-tasks-prs
      params:
        context: check-opsman-status
        path: bbr-pipeline-tasks-repo
        status: success

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: latest

resources:
- name: bbr-pipeline-tasks-repo
  type: git
  source:
    branch: master
    uri: https://github.com/pivotal-cf/bbr-pcf-pipeline-tasks.git
    private_key: ((github.ssh_key))
    ignore_paths:
    - docker/*
    - README.md
    - tasks/bbr-backup-pks/*
    - tasks/bbr-backup-pks-clusters/*
    - tasks/bbr-cleanup-pks/*
    - tasks/bbr-cleanup-pks-clusters/*
    - tasks/lock-pks/*
    - tasks/unlock-pks/*

- name: bbr-pipeline-tasks-prs
  type: pull-request
  source:
    disable_forks: true
    only_mergeable: true
    access_token: ((github.access_token))
    private_key: ((github.ssh_key))
    repo: pivotal-cf/bbr-pcf-pipeline-tasks
    uri: git@github.com:pivotal-cf/bbr-pcf-pipeline-tasks.git
    ignore_paths:
    - docker/*
    - README.md
    - tasks/bbr-backup-pks/*
    - tasks/bbr-backup-pks-clusters/*
    - tasks/bbr-cleanup-pks/*
    - tasks/bbr-cleanup-pks-clusters/*
    - tasks/lock-pks/*
    - tasks/unlock-pks/*

- name: om-backup-artifact
  type: s3
  source:
    <<: *s3_credentials
    regexp: installation_(.*).zip

- name: pas-backup-bucket
  type: s3
  source:
    <<: *s3_credentials
    regexp: pas-backup_(.*).tar

- name: director-backup-bucket
  type: s3
  source:
    <<: *s3_credentials
    regexp: director-backup_(.*).tar

- name: bbr-release
  type: pivnet
  source:
    api_token: ((pivnet.api_token))
    product_slug: p-bosh-backup-and-restore

- name: 6h
  type: time
  source:
    interval: 6h
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]
